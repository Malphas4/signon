<% content_for :title, "Edit [#{@user.name}]" %>

<h1>Edit &ldquo;<%= @user.name %>&rdquo;</h1>

<%= form_for @user, :url => user_email_path(@user), :html => {:class => 'well add-top-margin'} do |f| %>
  <% if @user.errors.count > 0 %>
    <div class="govuk-error-summary alert alert-danger" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="error-summary">
      <div class="govuk-error-summary__body">
        <ul class="govuk-list govuk-error-summary__list">
          <% @user.errors.full_messages.each do |message| %>
            <%= content_tag :li, message %>
          <% end %>
        </ul>
      </div>
    </div>
  <% end %>

  <p class="form-group">
    <%= f.label :email %>
    <%= f.text_field :email, autocomplete: "off", class: 'form-control input-md-6 add-label-margin' %>
    <% if f.object.invited_but_not_yet_accepted? %>
      <span class="help-block">Changes will trigger a new signup email.</span>
    <% end %>
  </p>

  <% if f.object.unconfirmed_email.present? %>
    <p class="form-group">
      <%= f.label :unconfirmed_email, "Pending email" %>
      <%= f.text_field :unconfirmed_email, readonly: "readonly", disabled: "disabled", class: 'form-control' %>

      <div class="help-block add-bottom-margin">
        <%= link_to "Resend confirmation email", resend_email_change_user_email_path(f.object), :method => :put, :class => "btn btn-primary add-right-margin" %>
        <%= link_to "Cancel change", cancel_email_change_user_email_path(f.object), :method => :delete, :class => "btn btn-danger" %>
      </div>
    </p>
  <% end %>

  <%= f.submit :class => 'btn btn-primary' %>
<% end %>
